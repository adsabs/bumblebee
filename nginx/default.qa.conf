server {
    listen 80;
    server_name localhost;

    root /app/production;
    index index.html;

    # Main SPA entry
    location / {
        try_files $uri $uri/ /index.html;
        include /etc/nginx/mime.types;
        expires 6M;

        add_header 'Access-Control-Allow-Origin' "http://localhost:8000" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type';
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # Explicitly handle index routes
    location ^~ /index {
        expires 0;
        add_header Cache-Control "public";
    }

    # Routes that fall back to index.html for SPA navigation
    location ~ ^/(search|abs|user|index|feedback|execute-query|public-libraries|classic-form|paper-form)/ {
        try_files $uri $uri/ /index.html;
        include /etc/nginx/mime.types;
        expires 6M;

        add_header 'Access-Control-Allow-Origin' "http://localhost:8000" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type';
    }

    # Health checks
    location /ready {
        access_log off;
        return 200 "{\"ready\": true}";
    }

    location /alive {
        access_log off;
        return 200 "{\"alive\": true}";
    }

    # Serve JavaScript with UTF-8
    location ~* \.js$ {
        default_type application/javascript;
        charset utf-8;
        add_header Content-Type "application/javascript; charset=utf-8";
    }
    # Ensure fonts are served with correct MIME types
    location ~* \.(eot|ttf|woff|woff2)$ {
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, OPTIONS';
        add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';
        access_log off;
        expires 6M;
        add_header Content-Type "";
    }

    # Ensure CSS is served with UTF-8 (important for glyphs like \f1d4)
    location ~* \.css$ {
        default_type text/css;
        charset utf-8;
        add_header Content-Type "text/css; charset=utf-8";
    }

    # Proxy API routes to the backend service
    location /v1/ {
        access_log /var/log/nginx/proxy_access.log proxy_debug;
        error_log /var/log/nginx/proxy_error.log debug;
        proxy_pass https://qa.adsabs.harvard.edu/v1;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Authorization $http_authorization;

        # Optional CORS headers
        add_header 'Access-Control-Allow-Origin' * always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With';
    }
}
