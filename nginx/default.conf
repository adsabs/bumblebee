server {
    listen 80;
    server_name localhost;

    # Root location with CORS and ENV variable for scripts
    location / {
        add_header 'Access-Control-Allow-Origin' "http://localhost:8000" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type';

        root /app/production;
        index index.html;

        # Inject environment variable as a script tag in the HTML
        sub_filter '</head>' '<script>window.ENV="${ENVIRONMENT}";</script></head>';
        sub_filter_once on;

        include /etc/nginx/mime.types;
        expires 6M;

        # Prevent caching of specific files
        location ^~ /discovery.config {
            expires 0;
            add_header Cache-Control "public";
        }

        location ^~ /index {
            expires 0;
            add_header Cache-Control "public";
        }
    }

    # Proxy for QA
    location /qa/v1 {
        proxy_pass https://qa.adsabs.harvard.edu/v1;
        proxy_http_version 1.1;
        proxy_set_header Host qa.adsabs.harvard.edu;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Support CORS preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;

        add_header 'Access-Control-Allow-Origin' "http://localhost:8000" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' '*' always;
        add_header 'Access-Control-Allow-Headers' '*';

        access_log /var/log/nginx/qa_access.log proxied_log;
        error_log /var/log/nginx/qa_error.log debug;
    }

    # Proxy for DEV
    location /dev/v1 {
        proxy_pass https://devapi.adsabs.harvard.edu/v1;
        proxy_http_version 1.1;
        proxy_set_header Host devapi.adsabs.harvard.edu;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Support CORS preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;

        add_header 'Access-Control-Allow-Origin' "http://localhost:8000" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' '*' always;
        add_header 'Access-Control-Allow-Headers' '*';

        access_log /var/log/nginx/dev_access.log proxied_log;
        error_log /var/log/nginx/dev_error.log debug;
    }

    # Proxy for PROD
    location /v1 {
        proxy_pass https://api.adsabs.harvard.edu/v1;
        proxy_http_version 1.1;
        proxy_set_header Host api.adsabs.harvard.edu;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Support CORS preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;

        add_header 'Access-Control-Allow-Origin' "http://localhost:8000" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' '*' always;
        add_header 'Access-Control-Allow-Headers' '*';

        access_log /var/log/nginx/prod_access.log proxied_log;
        error_log /var/log/nginx/prod_error.log debug;
    }


    # Additional paths with CORS headers
    location ~ ^/(search|abs|user|index|feedback|execute-query|public-libraries|classic-form|paper-form)/ {
        root /app/production;
        index index.html;
        include /etc/nginx/mime.types;
        try_files $uri /index.html;

        add_header 'Access-Control-Allow-Origin' "http://localhost:8000" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type';

        # Inject environment variable as a script tag in the HTML
        sub_filter '</head>' '<script>window.ENV="${ENVIRONMENT}";</script></head>';
        sub_filter_once on;
    }

    # Health check endpoints
    location /ready {
        access_log off;
        return 200 "{\"ready\": true}";
    }

    location /alive {
        access_log off;
        return 200 "{\"alive\": true}";
    }
}
